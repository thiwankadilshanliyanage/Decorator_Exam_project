/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SEApplication;

/**
 *
 * @author Thiwanka
 */
public class SE_App extends javax.swing.JFrame {

    /**
     * Creates new form SE_App
     */
    public SE_App() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TypeSelector = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        Calculatetotal = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        whipping = new javax.swing.JCheckBox();
        vanilla = new javax.swing.JCheckBox();
        cashew = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Decorator Pattern Test");
        setAlwaysOnTop(true);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Fresh Fruit");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Fruit Juice Type");

        TypeSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Orange", "Avacado", "Strawberry", "Pomegranatc" }));
        TypeSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TypeSelectorActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Type");

        Calculatetotal.setBackground(new java.awt.Color(51, 51, 255));
        Calculatetotal.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Calculatetotal.setForeground(new java.awt.Color(255, 255, 255));
        Calculatetotal.setText("Calculate Total");
        Calculatetotal.setContentAreaFilled(false);
        Calculatetotal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Calculatetotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculatetotalActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Toppings");

        total.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        total.setForeground(new java.awt.Color(255, 0, 51));
        total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        total.setText("00.00");

        whipping.setText("Whipping Cream");
        whipping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whippingActionPerformed(evt);
            }
        });

        vanilla.setText("Vanilla Cream");

        cashew.setText("Cashew Nuts");
        cashew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(111, 111, 111)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(24, 24, 24)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(TypeSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(whipping)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(vanilla))
                                            .addComponent(cashew))))
                                .addGap(0, 30, Short.MAX_VALUE))
                            .addComponent(Calculatetotal, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TypeSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(whipping)
                    .addComponent(vanilla))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cashew)
                .addGap(6, 6, 6)
                .addComponent(Calculatetotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void TypeSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TypeSelectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TypeSelectorActionPerformed

    private void CalculatetotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculatetotalActionPerformed
       
        //Orange
        
        if(TypeSelector.getSelectedItem().equals("Orange")||whipping.isSelected()||vanilla.isSelected()||cashew.isSelected()){
            if(TypeSelector.getSelectedItem().equals("Orange")){
                FruitJuice fj = new Orange();
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1); 
            }
            if(TypeSelector.getSelectedItem().equals("Orange")&&whipping.isSelected()){
                FruitJuice fj = new Orange();
                fj= new WhippingCream(fj);
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1);
            }
            if(TypeSelector.getSelectedItem().equals("Orange")&&vanilla.isSelected()){
                FruitJuice fj = new Orange();
                fj= new VanillaCream(fj);
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1); 
            }
            if(TypeSelector.getSelectedItem().equals("Orange")&&cashew.isSelected()){
             FruitJuice fj = new Orange();
                fj= new CashewNuts(fj);
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1); 
            }
             if(TypeSelector.getSelectedItem().equals("Orange")&&cashew.isSelected()&&whipping.isSelected()){
                 FruitJuice fj1 = new Orange();
                 fj1= new CashewNuts(fj1);
                 fj1 =new WhippingCream(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             } 
             if(TypeSelector.getSelectedItem().equals("Orange")&&cashew.isSelected()&&vanilla.isSelected()){
                 FruitJuice fj1 = new Orange();
                 fj1= new CashewNuts(fj1);
                 fj1 =new VanillaCream(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             } 
             if(TypeSelector.getSelectedItem().equals("Orange")&&vanilla.isSelected()&&whipping.isSelected()){
                 FruitJuice fj1 = new Orange();
                 fj1= new WhippingCream(fj1);
                 fj1 =new VanillaCream(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             }  if(TypeSelector.getSelectedItem().equals("Orange")&&vanilla.isSelected()&&whipping.isSelected()&&cashew.isSelected()){
                 FruitJuice fj1 = new Orange();
                 fj1= new WhippingCream(fj1);
                 fj1 =new VanillaCream(fj1);
                 fj1 = new CashewNuts(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             } 
        
        }
             //Avacado
             
         if(TypeSelector.getSelectedItem().equals("Avacado")||whipping.isSelected()||vanilla.isSelected()||cashew.isSelected()){
            if(TypeSelector.getSelectedItem().equals("Avacado")){
                FruitJuice fj = new Avacado();
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1); 
            }
             if(TypeSelector.getSelectedItem().equals("Avacado")&&whipping.isSelected()){
                FruitJuice fj = new Avacado();
                fj= new WhippingCream(fj);
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1);
            }
            if(TypeSelector.getSelectedItem().equals("Avacado")&&vanilla.isSelected()){
                FruitJuice fj = new Avacado();
                fj= new VanillaCream(fj);
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1); 
            }
            if(TypeSelector.getSelectedItem().equals("Avacado")&&cashew.isSelected()){
             FruitJuice fj = new Avacado();
                fj= new CashewNuts(fj);
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1); 
            }
             if(TypeSelector.getSelectedItem().equals("Avacado")&&cashew.isSelected()&&whipping.isSelected()){
                 FruitJuice fj1 = new Avacado();
                 fj1= new CashewNuts(fj1);
                 fj1 =new WhippingCream(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             } 
             if(TypeSelector.getSelectedItem().equals("Avacado")&&cashew.isSelected()&&vanilla.isSelected()){
                 FruitJuice fj1 = new Avacado();
                 fj1= new CashewNuts(fj1);
                 fj1 =new VanillaCream(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             } 
             if(TypeSelector.getSelectedItem().equals("Avacado")&&vanilla.isSelected()&&whipping.isSelected()){
                 FruitJuice fj1 = new Avacado();
                 fj1= new WhippingCream(fj1);
                 fj1 =new VanillaCream(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             }  if(TypeSelector.getSelectedItem().equals("Avacado")&&vanilla.isSelected()&&whipping.isSelected()&&cashew.isSelected()){
                 FruitJuice fj1 = new Avacado();
                 fj1= new WhippingCream(fj1);
                 fj1 =new VanillaCream(fj1);
                 fj1 = new CashewNuts(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             } 
        
        }
             //Strawbery
             
        if(TypeSelector.getSelectedItem().equals("Strawberry")||whipping.isSelected()||vanilla.isSelected()||cashew.isSelected()){
            if(TypeSelector.getSelectedItem().equals("Strawberry")){
                FruitJuice fj = new Strawberry();
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1); 
            }
             if(TypeSelector.getSelectedItem().equals("Strawberry")&&whipping.isSelected()){
                FruitJuice fj = new Strawberry();
                fj= new WhippingCream(fj);
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1);
            }
            if(TypeSelector.getSelectedItem().equals("Strawberry")&&vanilla.isSelected()){
                FruitJuice fj = new Strawberry();
                fj= new VanillaCream(fj);
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1); 
            }
            if(TypeSelector.getSelectedItem().equals("Strawberry")&&cashew.isSelected()){
             FruitJuice fj = new Strawberry();
                fj= new CashewNuts(fj);
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1); 
            }
             if(TypeSelector.getSelectedItem().equals("Strawberry")&&cashew.isSelected()&&whipping.isSelected()){
                 FruitJuice fj1 = new Strawberry();
                 fj1= new CashewNuts(fj1);
                 fj1 =new WhippingCream(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             } 
             if(TypeSelector.getSelectedItem().equals("Strawberry")&&cashew.isSelected()&&vanilla.isSelected()){
                 FruitJuice fj1 = new Strawberry();
                 fj1= new CashewNuts(fj1);
                 fj1 =new VanillaCream(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             } 
             if(TypeSelector.getSelectedItem().equals("Strawberry")&&vanilla.isSelected()&&whipping.isSelected()){
                 FruitJuice fj1 = new Strawberry();
                 fj1= new WhippingCream(fj1);
                 fj1 =new VanillaCream(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             }  if(TypeSelector.getSelectedItem().equals("Strawberry")&&vanilla.isSelected()&&whipping.isSelected()&&cashew.isSelected()){
                 FruitJuice fj1 = new Strawberry();
                 fj1= new WhippingCream(fj1);
                 fj1 =new VanillaCream(fj1);
                 fj1 = new CashewNuts(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             } 
        
        }
        
        //Pomegranatc
        if(TypeSelector.getSelectedItem().equals("Pomegranatc")||whipping.isSelected()||vanilla.isSelected()||cashew.isSelected()){
            if(TypeSelector.getSelectedItem().equals("Pomegranatc")){
                FruitJuice fj = new Pomegranate();
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1); 
            }
             if(TypeSelector.getSelectedItem().equals("Pomegranatc")&&whipping.isSelected()){
                FruitJuice fj = new Pomegranate();
                fj= new WhippingCream(fj);
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1);
            }
            if(TypeSelector.getSelectedItem().equals("Pomegranatc")&&vanilla.isSelected()){
                FruitJuice fj = new Pomegranate();
                fj= new VanillaCream(fj);
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1); 
            }
            if(TypeSelector.getSelectedItem().equals("Pomegranatc")&&cashew.isSelected()){
             FruitJuice fj = new Pomegranate();
                fj= new CashewNuts(fj);
                String t1 =String.valueOf(fj.getPrice());
                total.setText(t1); 
            }
             if(TypeSelector.getSelectedItem().equals("Pomegranatc")&&cashew.isSelected()&&whipping.isSelected()){
                 FruitJuice fj1 = new Pomegranate();
                 fj1= new CashewNuts(fj1);
                 fj1 =new WhippingCream(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             } 
             if(TypeSelector.getSelectedItem().equals("Pomegranatc")&&cashew.isSelected()&&vanilla.isSelected()){
                 FruitJuice fj1 = new Pomegranate();
                 fj1= new CashewNuts(fj1);
                 fj1 =new VanillaCream(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             } 
             if(TypeSelector.getSelectedItem().equals("Pomegranatc")&&vanilla.isSelected()&&whipping.isSelected()){
                 FruitJuice fj1 = new Pomegranate();
                 fj1= new WhippingCream(fj1);
                 fj1 =new VanillaCream(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             }  if(TypeSelector.getSelectedItem().equals("Pomegranatc")&&vanilla.isSelected()&&whipping.isSelected()&&cashew.isSelected()){
                 FruitJuice fj1 = new Pomegranate();
                 fj1= new WhippingCream(fj1);
                 fj1 =new VanillaCream(fj1);
                 fj1 = new CashewNuts(fj1);
                String t2 =String.valueOf(fj1.getPrice());
                total.setText(t2);
             } 
        
        }

    }//GEN-LAST:event_CalculatetotalActionPerformed

    private void whippingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whippingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_whippingActionPerformed

    private void cashewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cashewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SE_App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SE_App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SE_App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SE_App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SE_App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Calculatetotal;
    private javax.swing.JComboBox<String> TypeSelector;
    private javax.swing.JCheckBox cashew;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel total;
    private javax.swing.JCheckBox vanilla;
    private javax.swing.JCheckBox whipping;
    // End of variables declaration//GEN-END:variables
}
interface FruitJuice{
    public abstract double getPrice();
    
}
class Orange implements FruitJuice{
    @Override
    public double getPrice(){
        return 100;
    }
}
class Avacado implements FruitJuice{
    @Override
    public double  getPrice(){
        return 120;
    }
}
class Strawberry implements FruitJuice{
    @Override
    public double  getPrice(){
        return 200;
    }
}
class Pomegranate implements FruitJuice{
    @Override
    public double  getPrice(){
        return 250;
    }
}
abstract class Toppings implements FruitJuice{
   private final FruitJuice fruitJuice;
    
    public Toppings(FruitJuice fruitJuice){
        this.fruitJuice = fruitJuice;
    }
    @Override
    public double getPrice(){
        return fruitJuice.getPrice();
    }
}
class WhippingCream extends Toppings{
    public WhippingCream(FruitJuice fruitJuice){
        super(fruitJuice);
    }
    @Override
    public double getPrice(){
        return super.getPrice()+20;
    }
}
class VanillaCream extends Toppings{
    public VanillaCream(FruitJuice fruitJuice){
        super(fruitJuice);
    }
    @Override
     public double getPrice(){
        return super.getPrice()+50;
    }
}
class CashewNuts extends Toppings{
    public CashewNuts(FruitJuice fruitJuice){
        super(fruitJuice);
    }
    @Override
     public double getPrice(){
        return super.getPrice()+10;
    }
}
